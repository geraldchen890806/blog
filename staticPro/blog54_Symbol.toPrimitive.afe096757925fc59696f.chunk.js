(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{Pq2V:function(n,o,e){"use strict";e.r(o);var t=e("q1tI"),i=e.n(t),r=e("IujW"),l=e.n(r);o.default=function(){return i.a.createElement(l.a,{source:'### Symbol.toPrimitive 是一个内置的 Symbol 值，它是作为对象的函数值属性存在的，当一个对象转换为对应的原始值时，会调用此函数。\n\n在 Symbol.toPrimitive 属性(用作函数值)的帮助下，一个对象可被转换为原始值。该函数被调用时，会被传递一个字符串参数 hint ，表示要转换到的原始值的预期类型。\n\nhint 参数的取值是 "number"、"string" 和 "default" 中的任意一个。\n转换过程如下\n\nnumber: val → val.valueOf() → val.toString() → error\n\nstring: val → val.toString() → val.valueOf() → error\n\ndefault: 同 number\n\n```\n// 一个没有提供 Symbol.toPrimitive 属性的对象，参与运算时的输出结果\nvar obj1 = {};\nconsole.log(+obj1);     // NaN\nconsole.log(`${obj1}`); // "[object Object]"\nconsole.log(obj1 + ""); // "[object Object]"\n\n// 接下面声明一个对象，手动赋予了 Symbol.toPrimitive 属性，再来查看输出结果\nvar obj2 = {\n  [Symbol.toPrimitive](hint) {\n    if (hint == "number") {\n      return 10;\n    }\n    if (hint == "string") {\n      return "hello";\n    }\n    return true;\n  }\n};\nconsole.log(+obj2);     // 10      -- hint 参数值是 "number"\nconsole.log(`${obj2}`); // "hello" -- hint 参数值是 "string"\nconsole.log(obj2 + ""); // "true"  -- hint 参数值是 "default"\n```\n\n### JS 中的加法运算\n\n1、使用 ToPrimitive 运算转换左右运算元为原始数据类型（primitive）。\n\n2、在转换后，如果其中一个运算元出现原始数据类型是“字符串”类型值时，则另一运算元强制转换为字符串，然后做字符串的连接运算。\n\n3、在其他情况时，所有运算元都会转换为原始数据类型的“数字”类型值，然后作数字的相加。\n\n### 然后我们看下 [] + {} == {} + []\n\n1、`{} + [] == 0`\n\n其实{}只是一个代码块\n\n```\n{} + [] =>\n[] =>\n([]).valueOf() =>\n+ "" =>\n0\n```\n\n2、`[] + {} == "[object Object]"`\n\n```\n([]).valueOf() + ({}).valueOf() =>\n[] + {} =>\n([]).toString() + ({}).toString =>\n"" + "[object Object]" =>\n"[object Object]"\n```\n\n3、`[] + {} == {} + []`\n\n解析为 "[object Object]" == "[object Object]"\n\n4、`{} + [] != [] + {}` 注：[chrome 中 {} + [] == [] + {}](https://stackoverflow.com/questions/36438034/why-is-no-longer-nan-in-chrome-console?noredirect=1&lq=1)\n\n```\n{} + [] != [] + {} =>\n+ [] != [] + {} =>\n0 != "[object Object]"\n```\n\n参考:\n\n[Symbol.toPrimitive](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol/toPrimitive)\n\n[JS 加法运算全解析](https://www.jianshu.com/p/f4f2a57b0cfd)\n',htmlMode:"raw"})}}}]);