(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{476:function(n,e,a){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(){return t.default.createElement(l.default,{source:r.default,htmlMode:"raw"})};var t=c(a(2)),l=c(a(508)),r=c(a(799));function c(n){return n&&n.__esModule?n:{default:n}}},799:function(n,e){n.exports="IE8及以前版本Array中是没有forEach方法的\n\n可以自己给Array.prototype加个扩充\n```\nif (!Array.prototype.forEach) {\n\n  Array.prototype.forEach = function(callback, thisArg) {\n    var T, k;\n    if (this == null) {\n      throw new TypeError(' this is null or not defined');\n    }\n    var O = Object(this);\n    var len = O.length >>> 0;\n    if (typeof callback !== \"function\") {\n      throw new TypeError(callback + ' is not a function');\n    }\n    if (arguments.length > 1) {\n      T = thisArg;\n    }\n    k = 0;\n    while (k < len) {\n      var kValue;\n      if (k in O) {\n        kValue = O[k];\n        callback.call(T, kValue, k, O);//主要就是这段代码\n      }\n      k++;\n    }\n  };\n}\n```\n\n再看下jQuery的each方法的实现，扩展了对象的遍历\n\n需要注意的是each方法回调函数的参数与forEach相反 是先index后elem\n\n\n```\njQuery.each =  function( object, callback, args ) {\n    var name, i = 0,\n            length = object.length,\n            isObj = length === undefined || jQuery.isFunction( object );\n\n    if ( args ) {\n        if ( isObj ) {\n            for ( name in object ) {\n                if ( callback.apply( object[ name ], args ) === false ) {\n                    break;\n                }\n            }\n        } else {\n            for ( ; i < length; ) {\n                if ( callback.apply( object[ i++ ], args ) === false ) {\n                    break;\n                }\n            }\n        }\n\n        // A special, fast, case for the most common use of each\n    } else {\n        if ( isObj ) {\n            for ( name in object ) {\n                if ( callback.call( object[ name ], name, object[ name ] ) === false ) {\n                    break;\n                }\n            }\n        } else {\n            for ( ; i < length; ) {\n                if ( callback.call( object[ i ], i, object[ i++ ] ) === false ) {\n                    break;\n                }\n            }\n        }\n    }\n    return object;\n}\n```"}}]);